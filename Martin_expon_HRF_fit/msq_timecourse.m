function [m] = msq_timecourse(V,t,tc,RunA,RunB)% function [m] = msq_timecourse(V,t,tc,RunA,RunB)% constraints% keep gains positive, so amplitude can drive neg signalV(1) = max(V(1),0);     % V1 (gain) must be +V(4) = max(V(4),0);     % V4 (gain) must be +V(7) = max(V(7),0);     % V1 (gains) must be at least % temporary constraints for HR fittingV(2) = min(V(2),180);     % rise (delay) must be no more than V(2) = max(V(2),120);     % rise (delay) must be at least V(5) = min(V(5),330);     % fall (delay) must be no more than V(5) = max(V(5),230);     % fall (delay) must be at least V(8) = min(V(8),400);     % V (delay) must be no more than V(8) = max(V(8),280);     % V (delay) must be at least %V(3) = max(V(3),0);     % V3 (initial amplitude) must be +%V(6) = min(V(6),0);     % V4 (gain) must be +V(1) = max(V(1),.04);     % V1 (gains) must be at least V(4) = max(V(4),.04);     % V1 (gains) must be at least HR = il_hdmf_tw(t,V(1:9));len = length(RunA);timecourse = conv(RunA, HR);if size(timecourse,2) > size(timecourse,1), timecourse = timecourse';,end %timecourseA = conv(RunA, HR);%timecourseA = timecourseA(1:len);%HR = il_hdmf_tw(t,V(9:16));%timecourseB = conv(RunB, HR);%timecourseB = timecourseB(1:len);%timecourse = timecourseA + timecourseB;                  % The combined time course for stimuli A and Bm=sum((tc-timecourse).^2);