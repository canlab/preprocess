
eval(['cd /data4/intext/RESULTS/model' model '/imgs'])


% compute fixed effects map
% =====================================================================================
CON_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'con_0003');
NCON_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'ncon_0003');
SNCON_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'sncon_0003');
T_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'spmT_0003');
NT_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'nspmT_0003');
SNT_0003 = fixedeffects('compute','/data',drive,['/intext/RESULTS/model ' model '/sub'],ss,[],'snspmT_0003');

save CON_0003


% image stat maps and print
% =====================================================================================

% ---- con images, before norm or smoothing ----
[d1,d2,h] = readim2(CON_0003.randtmap,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 CON_0003 randfx tmap']),spm_figure('Print');
   
   [d1,d2,h] = readim2(T_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
   title([':                       model 13 T_0003 min']),spm_figure('Print');
   
[d1,d2,h] = readim2(CON_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 CON_0003 mean']),spm_figure('Print');
   
% ---- normalized con images ----  
[d1,d2,h] = readim2(NCON_0003.randtmap,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 NCON_0003 randfx tmap']),spm_figure('Print');
   
   [d1,d2,h] = readim2(NT_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
   title([':                       model 13 NT_0003 min']),spm_figure('Print');
   
   [d1,d2,h] = readim2(NCON_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
   title([':                       model 13 NCON_0003 mean']),spm_figure('Print');
   
% ---- smoothed and normalized con images ---- 
[d1,d2,h] = readim2(SNCON_0003.randtmap,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 SNCON_0003 randfx tmap']),spm_figure('Print');

[d1,d2,h] = readim2(SNT_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 SNT_0003 min']),spm_figure('Print');
 
[d1,d2,h] = readim2(SNCON_0003.min,'p','t','spm'); subplot(h(1));colormap(jet) 
	title([':                       model 13 SNCON_0003 mean']),spm_figure('Print');
   
   
   
% compute fixed effects,avg con, and minimum stat structures for imaging with overlayimg
% =====================================================================================

anatim = '/data1/intext/model2/images/avg_nrt1';
anatim2 = '/data1/intext/sub1/Anatomy/rt1';

tOVLmin = struct('anatim',anatim2, ...
   'mapim',T_0003.min, ...
   'thresh',1, ...
   'slices',1:28, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['T_0003.min over sub1 rt1, no norm, model 13 '], ...
	'clim',[-4 4] ...
   )

tOVLmean = struct('anatim',anatim2, ...
   'mapim',T_0003.fixedtmap, ...
   'thresh',5, ...
   'slices',1:28, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       T_0003.mean over sub1 rt1, no norm, model 13 '], ...
   'clim',[-12 12] ...
   )

ntOVLmin = struct('anatim',anatim, ...
   'mapim',NT_0003.min, ...
   'thresh',1, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       NT_0003.min over avg_nrt1 model 13 '], ...
   'clim',[-4 4] ...
   )

ntOVLmean = struct('anatim',anatim, ...
   'mapim',NT_0003.fixedtmap, ...
   'thresh',5, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       NT_0003.mean over avg_nrt1 model 13 '], ...
   'clim',[-12 12] ...
   )

sntOVLmin = struct('anatim',anatim, ...
   'mapim',SNT_0003.min, ...
   'thresh',1, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       SNT_0003.min over avg_nrt1 model 13 '], ...
   'clim',[-4 4] ...
   )

sntOVLmean = struct('anatim',anatim, ...
   'mapim',SNT_0003.fixedtmap, ...
   'thresh',5, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       SNT_0003.mean over avg_nrt1 model 13 '], ...
   'clim',[-12 12] ...
   )

save CON_0003

overlayimg(tOVLmin)
overlayimg(tOVLmean)
overlayimg(ntOVLmin)
overlayimg(ntOVLmean)
overlayimg(sntOVLmin)
overlayimg(sntOVLmean)

cOVLmin = struct('anatim',anatim2, ...
   'mapim',CON_0003.min, ...
   'thresh',8, ...
   'slices',1:28, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       CON_0003.min over sub1 rt1, no norm, model 13 '], ...
	'clim',[-50 50] ...
   )

cOVLmean = struct('anatim',anatim2, ...
   'mapim',CON_0003.mean, ...
   'thresh',10, ...
   'slices',1:28, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       CON_0003.mean over sub1 rt1, no norm, model 13 '], ...
   'clim',[-50 50] ...
   )

ncOVLmin = struct('anatim',anatim, ...
   'mapim',NCON_0003.min, ...
   'thresh',8, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps'], ...
   'maptitle',['       NCON_0003.min over avg_nrt1 model 13 '], ...
   'clim',[-50 50] ...
   )

ncOVLmean = struct('anatim',anatim, ...
   'mapim',NCON_0003.mean, ...
   'thresh',10, ...
   'slices',1:34, ...
   'printfile',['model_' model 'overlays.ps']', ...
   'maptitle',['       NCON_0003.mean over avg_nrt1 model 13 '], ...
   'clim',[-50 50] ...
   )

save CON_0003

overlayimg(cOVLmin)
overlayimg(cOVLmean)
overlayimg(ncOVLmin)
overlayimg(ncOVLmean)


