{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;\f2\fswiss\fcharset77 ArialMT;
\f3\fswiss\fcharset77 Arial-BoldMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red34\green139\blue34;\red0\green0\blue221;
}
\margl1440\margr1440\vieww17000\viewh15220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 EXTRACTING DATA (AND SOME PLOTS)\
\
\pard\pardeftab720\ql\qnatural

\f1\b0\fs24 \cf2 function\cf0  clusters = sphere_roi_tool(varargin)\
\pard\pardeftab720\ql\qnatural
\cf3 % clusters = sphere_roi_tool(varargin)\cf0 \
\cf3 % clusters = sphere_roi_tool('mask','mask.img','bilat',1)\cf0 \
\cf3 %\cf0 \
\cf3 % A tool for building a number of spherical ROIs masked with some other\cf0 \
\cf3 % mask (e.g., gray matter).  High-level end-usef function.\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 \
  [clusters,maskCLU] = sphere_mask(fname,XYZmm,r,outname,[maskname])
\f1 \cf0 \
  Creates mask images and clusters for a set of spheres defined around\
  coordinates you specify.  Used for creating regions of interest (ROIs)
\f0\b\fs36 \
 \

\f2\b0\fs24 \cf4   clusters = extract_raw_data(EXPT,clusters,[recover-resume at sub#])
\f1 \cf0 \
 \
  tor wager\
  Extracts raw image data for each subject in each cluster\
  averaging over cluster voxels (saved in clusters.all_data)\
  and averaging over subjects (saved in clusters.timeseries)\
\
\
\pard\pardeftab720\ql\qnatural
\cf2 function\cf0  cl = extract_indiv_peak_data(cl,imgs)\
\pard\pardeftab720\ql\qnatural
\cf3 % cl = extract_indiv_peak_data(cl,imgs)\cf0 \
\cf3 %\cf0 \
\cf3 % Purpose: to find individually significant regions within each subject\cf0 \
\cf3 % and save average timecourses for each individual ROI for each subjec\cf0 \
\cf3 %\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
\pard\pardeftab720\ql\qnatural
\cf2 function\cf0  [cl,varargout] = cluster_tmask(cl,tm,si,varargin)\
\pard\pardeftab720\ql\qnatural
\cf3 % [cl,varargout] = cluster_tmask(cl,tm,si,varargin)\cf0 \
\cf3 %\cf0 \
\cf3 % Given clusters and a string name of a t-image, finds voxels that exceed a\cf0 \
\cf3 % specified t-threshold\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4   function [clusters,subcl] = cluster_barplot(P,clusters)
\f1 \cf0 \
  \
  this function not only plots, but separates subclusters using pca / cluster_princomp.m\
  based on pattern across all conditions, covariance (not correlation), \
\

\f3\b \cf4   function [clusters, SPM, xX, xCon] = tor_extract_rois(imnames [can be empty],[opt] SPM, [opt] VOL, [opt] xX)
\f1\b0 \cf0 \
  this function gets timeseries data from all clusters in an SPM results output.\
 a key function used by many other functions!\
\

\f2 \cf4 timeseries3
\f1 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 \
\
ROI ANALYSIS: DATA PROCESSING AND FILTERING\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function [M,cl] = mvroitool_filter(cl)
\f1 \cf0 \
% [M,cl] = mvroitool_filter(cl)\
%\
% filtering and averaging of raw data within clusters\
% for use before using matrix_multivariate\
%\
% returns M (3-D matrix input to matrix_multivariate)\
% and cl structure with adjustedy field for each cluster.\
\

\f2 \cf4 roi_timeseries
\f1 \cf0 \
\

\f2 \cf4 filterAdjust
\f1 \cf0 \
\

\f2 \cf4   function [y,ntrimmed] = trimts(y,sd,X,[do spike correct])
\f1 \cf0 \
  1.  Adjusts for scan effects (unless X is empty)\
  2.  Windsorizes timeseries to sd standard deviations\
        - Recursive: 3 steps\
  3.  Adds scan effects back into timeseries\

\f2 \cf4 \
splineDetrend\
\
x = smooth_timeseries(tmp2,20);
\f1 \cf0 \
\

\f2 \cf4 function y = detransition(y,varargin)
\f1 \cf0 \
% y = detransition(y,[doplot])\
%\
% for fMRI timeseries that contains large 'jump' artifacts due to motion correction\
% or other problems.\
% removes these large spikes.\
% updated version built into spikecorrect in trimts\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 \
NONLINEAR FITTING\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2\b0\fs24 \cf4 function [params, height, delay] = ts_stats(DX,y,rint,rbase,varargin)
\f1 \cf0 \
% ts_stats(DX,y,rint,rbase,[opt] gammfunct)\
% by Tor Wager\
%\
% DX        is deconvolution model matrix to fit to timeseries data\
% y         is timeseries data for whole experiment\
% rint      is vector of indices of DX columns of interest (all params of interest)\
% rbase     is vector of indices of DX columns for baseline estimate\
% gammfunct is the function to fit nonlinearly; if empty, skips this.\
%\
% This function does:\
% - Fits DX matrix to data to get parameter estimates\
% - Subtracts param estimates from baseline estimates, if specified\
% - Returns DX param estimates of interest for group ANOVA\
% - Fits 2-parameter (height + delay) gamma function to param est. of interest\
% - Returns fitted height for each param of interest\
% - Returns fitted delay for each param of interest\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 \
\
ROI ANALYSIS: PLOTS OF DATA\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2\b0\fs24 \cf4 % axishandle = barplot_columns(dat,[title],[covs])
\f1 \cf0 \
%\
% This function makes a barplot of columns of data, with standard error\
% bars.  Optional arguments include removing continuous covariates before plotting,\
% robust (IRLS) estimation of means and correlations with covariates, and\
% within-subject error bars based on the subject x condition interaction\
% (overall), which is not quite the standard error contrasts of interest,\
% but is the standard error for a 1-way repeated measures ANOVA.\
\
\

\f3\b \cf4 function [clusters,subcl] = cluster_barplot(P,clusters,varargin)
\f1\b0 \cf0 \
% function [clusters,subcl] = cluster_barplot(P,clusters)\
% \
% this function not only plots, but separates subclusters using pca / cluster_princomp.m\
% based on pattern across all conditions, covariance (not correlation), \
% Outputs:\
% clusters struture, with BARPLOT substructure added\
% substructure contains data extracted and image file names\
%\
% This program uses XYZmm millimeter coordinates in clusters to find voxels\
% So clusters and data files may have different dimensions.\
\

\f2 \cf4 % [r,infostring,sig,h] = plot_correlation(xvec,yvec,[textlabs],[color],[doquad],[dorobust])
\f1 \cf0 \
% varargin is string of text labels\
% This function makes a nice scatterplot of two variables with a regression line.  \
% Options include colors, quadratic trend line, and robust estimation of regression\
% line and correlation.  Robust weight visualization is included\
\

\f2 \cf4 % [r,str,sig,ry,rx,h,rr] = prplot(y,X,col,[dorobust],[colors])
\f1 \cf0 \
% Partial residual plot of one column of X against y.\
% Uses robust MCD estimation to remove outliers \
% if you enter a 4th argument\
\

\f2 \cf4 % function [r,bb,f] = timeseries_prplot(y,X,cols,varargin)
\f1 \cf0 \
%\
% Plots timeseries data (y') against fitted response (X)\
% y is adjusted to remove all effects OTHER THAN those columns of X\
% specified in cols, creating a partial residual vector y'.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 plot_cluster_fir\
   c = plot_cluster_fir(c,cl,i,[do HP filter],[do height time wid plot])\
	new function, good for all kinds of roi plots from clusters w/raw data.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function tor_plot_avgs(AVG,STE,varargin)
\f1 \cf0 \
% function tor_plot_avgs(AVG,STE,varargin)\
%\
% ------ plot the selective average --------\
\
function fill_around_line\
\
function tor_fill_steplot\
\
function tor_bar_steplot\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 \
CLUSTERING DATA
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function [s,ss] = silhouetteplot(X,varargin)
\f1 \cf0 \
% function [s,ss] = silhouetteplot(X,varargin)\
%\
% plots average and complete linkage silhouette values by number of\
% clusters in solution; hierarchical clustering using clusterdata\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2\fs28 \cf4 function clout = anat_subclusters(cl)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\fs24 \cf0 % see below.
\f2\fs28 \cf4 \
\
tor_princomp\

\f1\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 shepardplot
\f1 \cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 SEPARATING REGIONS INTO SUBREGIONS
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2\fs28 \cf4 function clout = anat_subclusters(cl)
\f1\fs24 \cf0 \
% \
% Clusters voxels within 'clusters' structure based on anatomical locations\
% in space.  Outputs subgroups of smaller clusters.\
\

\f2\fs28 \cf4 cluster_princomp
\f1\fs24 \cf0 \
\

\f2\fs28 \cf4 % [clout] = clusters2roimask(cl)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\fs24 \cf0 % The purpose of this function is to facilitate making masks with ROIs for\
% future studies, give a clusters structure.  ROIs are constrained to be\
% within activation blobs specified by input clusters, and are masked by\
% selected ICBM regions.  Clusters may be smoothed before or after masking.\
%\
% Option to do 3 things, in order:\
% 1) Enlarge selected clusters\
% 2) Mask clusters with anatomical regions from ICBM atlas\
% 3) Subdivide clusters using hierarchical clustering of voxel coordinates\
%\
% output is a clusters file and a mask file in a 2 x 2 x 2 standard brain\
% space.  Well, no mask file yet.  And no shrinking.\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 LABELING REGIONS AND LOCALIZING ACTIVATIONS:\
PLOTS OF ACTIVATION MAPS AND 'CLUSTERS' STRUCTURES
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f3\b \cf4 montage_clusters(ovl,clusters,varargin)\

\f2\b0 montage_clusters_maxslice\
montage_clusters_points\
montage_clusters_text
\f1 \cf0 \
One of the most commonly used functions by me!  \
Creates a series of slices with colored blobs for activations.  A bird's eye view.\
\

\f2 \cf4 [num,name] = icbm_localize(cl)
\f1 \cf0 \
 \
  Visualizes clusters in spm Orthviews\
  and brings up ICBM template labels next to it\
  for easy comparison between template and cluster activations.\
\

\f2 \cf4 unction varargout = icbm_orthview_label(varargin)
\f1 \cf0 \
%[string,number,name,perc vox] = icbm_orthview_label(clusters)\
%\
% internal function used in icbm_localize\
% but can be used to provide labels with cluster input:\
% str = icbm_orthview_label(cl_interact);\
%\
\

\f3\b \cf4   function cluster_table(clusters,[opt] subclusters)
\f1\b0 \cf0 \
  Print output of clusters in table\
\

\f2 \cf4 % cluster_compare_slice(cl1,cl2,etc.)
\f1 \cf0 \
%\
% This function takes a series of clusters structures and overlays\
% activations on a series of slices, with the same scale used in each plot\
% so that activation z-scores can be compared across the clusters\
% structures.  Useful for showing comparisons between different analysis\
% methods or different contrasts.\
\

\f3\b \cf4 % cluster_orthviews(inputs in any order)
\f1\b0 \cf0 \
%\
% This function uses spm_orthviews to display activation blobs from a\
% clusters structure on a canonical structural brain image. Multiple\
% clusters may be plotted in multiple colors, and blobs may be added to an\
% existing orthviews figure.\
\
\pard\pardeftab720\ql\qnatural
\cf2 function\cf0  cl = talairach_clusters(xyz,L,str,varargin)\
\pard\pardeftab720\ql\qnatural
\cf3 % function cl = talairach_clusters(xyz,L,str,[color, e.g., 'r'])\cf0 \
\cf3 % \cf0 \
\cf3 % load talairach_info L5 x y z; xyz = [x y z]; \cf0 \
\cf3 % cl = talairach_clusters(xyz,L5,'Amygdala','y'); save cl_amy cl\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 IMAGE THRESHOLDING AND MANIPULATION
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function threshold_robust_t(u,df,[k],['pos', 'neg', 'both'],P)
\f1 \cf0 \

\f2 \cf4 function threshold_corr_t(u,df,[k],['pos', 'neg', 'both'],P)\
function threshold_spm_t(u,df,[k],['pos', 'neg', 'both'],P)
\f1 \cf0 \
\

\f2 \cf4   function Vo = contrast_image(P,Q,myc)
\f1 \cf0 \
\
  Creates a contrast image called Q (do not include path)\
  Given a list of img files P (spm format, with path)\
  and a contrast vector myc\
  In the directory of 1st image in P\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 META-ANALYSIS: PLOTTING\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function plot_points_on_brain(XYZ,varargin)
\f1 \cf0 \
% function plot_points_on_brain(XYZ,varargin)\
%\
% This function plots a 3-column vector of xyz points (coordinates from\
% studies) on a glass brain.  Four different views are created in 2\
% figures.\
%\
% An optional 2nd argument is a color, or list of colors.\
% An optional 3rd argument is a vector of integers to classify the points\
% into groups.  Each group gets a color in the colors vector.\
\

\f2 \cf4   dbcluster_glass_plot(newcl,colors,[select by field],[cell vector of conditions to select])
\f1 \cf0 \
  tor wager\
  newcl = clusters structure, output of database2clusters.m\
 \
  Creates 3 views of glass brain with points in each cluster plotted\
  in different symbols\
\

\f2 \cf4   handle = addbrain(enter arg to suppress lighting changes)
\f1 \cf0 \
  quick function to add transparent brain surface to figure\
\
\

\f2 \cf4 function density_image(varargin)
\f1 \cf0 \
% function density_image([fname],[radius],[threshold],[plot types])\
%\
% tor wager, 4/19/03\
% \
% This function plots line graphs, a montage, and a surface rendering\
% of a density map image, thresholded at a level you choose\
\
\

\f2 \cf4 makefigure\
makefigure2
\f1 \cf0 \
These are sub-functions of cluster_barplot (?).  They plot bar graphs of ROI data. \
 #2 is specialized for Intext study. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 META-ANALYSIS
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 function OUT = citation_mca(file)
\f1 \cf0 \
% OUT = citation_mca(file)\
% Citations are output from Endnote in APA 5th format\
% Save as MS-DOS text\
% example: 'citation_list1.txt'\
\
\

\f2 \cf4 function [newcl,DB] = database2clusters(db_mat,clusters,mydist)
\f1 \cf0 \
\
  This function turns a database file (stored as variables in a .mat file)\
  as created with read_database.m\
  into a clusters structure, by finding the points\
  that fall within mydist mm from any in-cluster voxel\
\
\

\f2 \cf4 clnew = dbcluster_meta_meta(varargin)
\f1 \cf0 \
 \
  Inputs:\
 \
  clusters structures, one for each meta-analysis\
  always followed immediately by DB database structure for the\
  meta-analysis\
  These structures are the output of database2clusters\
\
\

\f2 \cf4 function meta_analysis_table(XYZlist,r,varargin)
\f1 \cf0 \
%\
% takes a list of XYZ mm points, and, for each point you specify, makes a table of\
% other studies in the meta-analysis files that report peaks within r mm (radius) of\
% the point.\
% Looks for a file on the path called "meta_analysis_master_file.mat",\
% unless you specify another file name as an optional argument.  The file\
% should contain one or more meta-analysis database structures, named *DB*,\
% which are created with database2clusters.\
%\
% This function calls other useful functions that can also be used\
% stand-alone:\
%   cl = database_point_probe(PAINDB2,[-42 0 2],10,fl);\
%   dbcluster_point_table(cl)\
\
\

\f2 \cf4 function database_point_probe(DB,mmcenters,r,varargin)
\f1 \cf0 \
% database_point_probe(DB,mmcenters,r,varargin)\
%\
% given a point list (n x 3 mm coordinates) and a radius r,\
% gets a clusters structure with points within r mm of point list\
% each center is a cluster.\
% prints a table of unique contrasts within studies that have points \
% within the specified regions.\
\

\f2 \cf4 function OUT = db_cluster_table(clusters,DB,varargin)
\f1 \cf0 \
 \
  tor wager\
  counts studies and contrasts in each cluster\
 \
  clusters is a struct in which XYZmm field has list of points\
  --should be output of database2clusters, which contains all fields\
  DB is database output of database2clusters\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 VISUALIZATION OF 'CLUSTERS' STRUCTURES IN 3-D
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 cluster_surf\
\
cluster_cutaways\
\
renderCluster_ui\
\
function cluster_subpeaks(clusters)
\f1 \cf0 \
% cluster_subpeaks(clusters)\
% Creates a surface plot of 3-D activation blobs in clusters structure.\
% Older function; not much used.\
\

\f2 \cf4 img2surf
\f1 \cf0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 UTILITY FUNCTIONS\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2\b0\fs24 \cf4 tor_fig\
\
equalize_axes\
\
tor_bar_steplot\
\
% function tor_bar_steplot2(avg,ste,plotcolor)
\f1 \cf0 \
%\
% for grouped axes, with 2 bars per group\
\

\f2 \cf4 tor_fill_steplot(dat,color,[behavior])
\f1 \cf0 \
 \
  Plots a mean vector (mean of each column of dat)\
  surrounded by a fill with standard err bars\
 \
  If dat has 3 dimensions, then\
  the diff between dat(:,:,1) and dat(:,:,2) is\
  used as the difference for computing standard err\
  (as in repeated measures)\
 \
\

\f2 \cf4 function nums = nums_from_text(mytext)
\f1 \cf0 \
% function nums = nums_from_text(mytext)\
% \
% returns numeric values of numbers embedded in text strings\
% given text string input\
\

\f2 \cf4   print_matrix(x,names cell array)
\f1 \cf0 \
 \
  tor wager\
  prints matrix values as tab delimited, 2 decimal places\
\

\f2 \cf4 str = correlation_to_text(matrix,value to mark with *,[cell array of names])
\f1 \cf0 \
 \
  input correlation matrix and critical value\
  or raw data and empty cm value\
  (determines threshold based on n)\
\

\f2 \cf4 str = print_correlation(matrix,value to mark with *,[cell array of names])
\f1 \cf0 \
 \
  input correlation matrix and critical value\
  or raw data and empty cm value\
  (determines threshold based on n)\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 STASTICAL DESIGN BUILDING
\f1\b0\fs24 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4   function [model,delta] = getPredictors(stimList, HRF, [downsample factor])
\f1 \cf0 \
  \
  Build predictors and delta functions, given a condition function or delta\
  function and either a convolution matrix or vector.\
\

\f2 \cf4 function [DX,sf] = tor_make_deconv_mtx(sf,tp,eres,[opt] TRs before stim onset,[num. sessions])
\f1 \cf0 \
\

\f2 \cf4 [sf_cell,sf_matrix] = downsample_delta(sf,eres)
\f1 \cf0 \
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 PLOTS and METRICS TO ASSESS EXPERIMENTAL POWER AND MODEL GOODNESS
\f1\b0\fs24 \

\f0\b\fs36 PLOTS of DESIGNS\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 \
TO-DO:\
	optimize basis sets\
	add block design to ga3power\
	add idealized mseqs to ga3power\
	figure cleanup - ga3power\
	fix downsampling problem - onsets2efficiency\
	sobol seeding\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4 spm_efficiency\
\
\
[out,P] = ga3power(pv,mspec,conditions,[contrasts])
\f1 \cf0 \
 \
  This function creates a power plot of a design with onsets (ons)\
  against random designs, block designs, and m-sequences with\
  similar design constraints.  Plots are in HRF estimation power (x)\
  vs. contrast detection (y)\

\f2 \cf4 \
function [con_eff,hrf_eff,X,hrfX,P] = efficency(X,PARAMS)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1 \cf0   a useful summary function for a design, incorporating tests of contrasts and of HRF shape estimation\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f2 \cf4   [out,P] = onsets2efficiency(ons,TR,[contrasts])
\f1 \cf0 \
 \
  A summary plot comparing a design with event onsets (ons) to \
  random designs and m-sequences. Tests first contrast entered.\
  ** currently, permuted designs are used, and they are sampled\
  differently (low-res) than the test design; causes probs!?\
\
\

\f2 \cf4 [P] = hrf_power(TR,hrfsamples,delta,contrasts,[S])
\f1 \cf0 \
 \
  Given a delta (indicator) matrix of onset times and contrasts, \
  this function generates an FIR deconvolution matrix and tests the \
  power of the design with pre-set assumptions.\
 \
\

\f2 \cf4 function OUT = genMseq(samples,TR,P,[number of sequences])
\f1 \cf0 \
 \
  Generates a number of truncated m-sequences\
  Tests their power with pre-set parameters, unless this option is turned\
  off.\
 \

\f2 \cf4 function [eff,eff_vector] = calcEfficiency(contrastweights,contrasts,xtxitx,svi,[D-opt flag])
\f1 \cf0 \
\

\f2 \cf4 function param_stability(OPT,clusters)
\f1 \cf0 \
%  param_stability(OPT,clusters)\
% Creates plots of parameter estimates given first session only, first two,\
% etc. up to n sessions.  Created to assess stability of parameters as runs\
% are added.\
%\
% timeseries field of clusters should be betas from beta imgs!\
% OPT is input_stats_OPT struture for the study.\
\

\f2 \cf4 function [X,d,out] = plotDesign(ons,rt,TR,varargin)
\f1 \cf0 \
% [X,d,out] = plotDesign(ons,rt,TR,varargin)\
%\
% simple function to plot a design\
% plots regressors and color-coded onset times as little sticks, with RT represented as height of the stick \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f0\b\fs36 \cf0 \
IMAGE PROCESSING DIAGNOSTICS\
\
help check_expt_norm\
help check_norm\
help check_norm2\
help check_norm3\
\
\
OLD/UNKNOWN USE FUNCTIONS\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural

\f1\b0\fs24 \cf0 tor_image_compare_clusters(varargin)\
tor_spm_render\
view_clusters\
\
% [xout,IDX] = mixture_model(tmp,[verbose])\
%\
% tor wager\
% this may be a silly way, not a real mixture model, but this function does\
% a test for normality on data (tmp), and if it fails, uses k-means to\
% cluster values into K classes.  if data within each class is normally\
% distributed (via significance test at fixed p), then it stops, otherwise it proceeds\
% up to max K = 5.  The function then subtracts class means.  This is\
% designed for timeseries data in which a true signal is masked by overall\
% 'cycling' of mean fMRI signal among two or more baseline values.  \
% Needs the stats toolbox.\
\
\
}